package com.shop.config;

import javax.persistence.Column;
import javax.persistence.EnumType;
import javax.persistence.Enumerated;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.security.config.annotation.web.builders.HttpSecurity;
import org.springframework.security.config.annotation.web.configuration.EnableWebSecurity;
import org.springframework.security.config.annotation.web.configuration.WebSecurityConfigurerAdapter;
import org.springframework.security.crypto.bcrypt.BCryptPasswordEncoder;
import org.springframework.security.crypto.password.PasswordEncoder;

import com.shop.constant.Role;
import com.shop.dto.MemberFormDto;
import com.shop.entity.Member;

@Configuration
@EnableWebSecurity
public class SecurityConfig extends WebSecurityConfigurerAdapter{
	
	@Override
	protected void configure(HttpSecurity http) throws Exception { }
	@Bean
	public PasswordEncoder passwordEncoder() { return new BCryptPasswordEncoder();
	}
	
	@Column(unique = true)
	private String email;
	private String password;
	private String address;
	@Enumerated(EnumType.STRING)
	private Role role;
	public static Member createMember(MemberFormDto memberFormDto, PasswordEncoder passwordEncoder){ Member member = new Member();
	member.setName(memberFormDto.getName());
	member.setEmail(memberFormDto.getEmail());
	member.setAddress(memberFormDto.getAddress());
	String password = passwordEncoder.encode(memberFormDto.getPassword());
	member.setPassword(password); member.setRole(Role.USER);
	return member;
	}
}
