package com.shop.repository;

import java.time.LocalDateTime;

import javax.persistence.EntityManager;

import org.thymeleaf.util.StringUtils;

import com.querydsl.core.types.dsl.BooleanExpression;
import com.querydsl.jpa.impl.JPAQueryFactory;
import com.shop.constant.ItemSellStatus;
import com.shop.entity.QItem;

public class ItemRepositoryCustomImpl implements ItemRepositoryCustom { // 인터페이스를 상속하여 구현한다.
	private JPAQueryFactory queryFactory; // 동적으로 쿼리를 생성하기 위해서 JPAQueryFactory 클래스를 사용한다.

	public ItemRepositoryCustomImpl(EntityManager em) {
		this.queryFactory = new JPAQueryFactory(em); // JPAQueryFactory 생성자로 EntityManager 객체를 넣어준다.
	}

	private BooleanExpression searchSellStatusEq(ItemSellStatus searchSellStatus) {
		return searchSellStatus == null ? null : QItem.item.itemSellStatus.eq(searchSellStatus);
	} // 상품 판매 상태조건이 전체(null)일 경우는 null을 리턴, 결과값이 null이면 where절에서 해당조건은 무시. 상품판매 상태조건이
		// null이 아니라
		// 판매중 혹은 품절 상태라면 해당조건 상품만 조회한다.

	private BooleanExpression regDtsAfter(String searchDateType) { // searchDateType의 값에 따라서 dateTime의 값을 이전 시간의 값으로
		// 세팅 후 해당 시간 이후로 등록된 상품만 조회한다. 예를 들어, searchDateType의 값이 1m인 경우 dateTime의 시간을 한
		// 달 전으로
		// 세팅 후 최근 한 달 동안 등록된 상품만 조회하도록 조건값을 반환한다.
		LocalDateTime dateTime = LocalDateTime.now();
		if (StringUtils.equals("all", searchDateType) || searchDateType == null) {
			return null;
		} else if (StringUtils.equals("1d", searchDateType)) {
			dateTime = dateTime.minusDays(1);
		} else if (StringUtils.equals("1w", searchDateType)) {
			dateTime = dateTime.minusWeeks(1);
		} else if (StringUtils.equals("1m", searchDateType)) {
			dateTime = dateTime.minusMonths(1);
		} else if (StringUtils.equals("6m", searchDateType)) {
			dateTime = dateTime.minusMonths(6);
		}
		return QItem.item.regTime.after(dateTime);
	}

	private BooleanExpression searchByLike(String searchBy, String searchQuery){ // searchBy의 값에 따라서 상품명에 검색어를 포함하고
		// 있는 상품 또는 상품 생성자의 아이디에 검색어를 포함하고 있는 상품을 조회하도록 조건값을 반환한다.
		if(StringUtils.equals("itemNm", searchBy)){
		return QItem.item.itemNm.like("%" + searchQuery + "%");
		} else if(StringUtils.equals("createdBy", searchBy)){
		return QItem.item.createdBy.like("%" + searchQuery + "%");
		} return null;
}